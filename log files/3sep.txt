1.runs program on application close .net


    static void Main(string[] args)
    {
        AppDomain.CurrentDomain.ProcessExit += new EventHandler (OnProcessExit); 
        // Do something here
    }

    static void OnProcessExit (object sender, EventArgs e)
    {
        Console.WriteLine ("I'm out of here");
    }

2.http://www.ti.com/tool/cc2541dk-sensor#Technical Documents
The CC2541 SensorTag is the first Bluetooth Smart development kit focused on wireless sensor applications and it is the only development kit targeted for smart phone app developers. The SensorTag can be used as reference design and development platform for a variety of smart phone accessories.

TI is making Bluetooth low energy app development easier and faster with the CC2541 based SensorTag, which has all the commonly used sensors on a single board for quick evaluation and demonstration. The SensorTag works with TI’s TPS62730 (step down converter), and includes TI’s TMP006 IR MEMS temperature sensor, humidity sensor, pressure sensor, accelerometer, gyroscope and magnetometer. The versatility of the SensorTag means limitless app possibilities including those for health and fitness, medical, educational tools, toys, remote controls, mobile phone accessories, proximity and indoor locationing.

The CC2541 SensorTag kit shortens the design time for Bluetooth low energy app development from months to hours with no embedded software design knowledge required. The SensorTag is preprogrammed with the FW needed to get started with smart phone app development and TI has a SensorTag App on the App Store providing developers easy access to the tools and software examples they need.


3.Realtime 

Server (app.js)
var app = require('http').createServer(handler)
var io = require('socket.io')(app);
var fs = require('fs');

app.listen(80);

function handler (req, res) {
  fs.readFile(__dirname + '/index.html',
  function (err, data) {
    if (err) {
      res.writeHead(500);
      return res.end('Error loading index.html');
    }

    res.writeHead(200);
    res.end(data);
  });
}

io.on('connection', function (socket) {
  socket.emit('news', { hello: 'world' });
  socket.on('my other event', function (data) {
    console.log(data);
  });
});


Client (index.html)
<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io('http://localhost');
  socket.on('news', function (data) {
    console.log(data);
    socket.emit('my other event', { my: 'data' });
  });
</script>

4.realtime socket.io
https://www.youtube.com/watch?v=kyPiJEVQ6cU

5.expresjs node.js
Fast, unopinionated, minimalist web framework for Node.js
$ npm install express --save
Express docs available in other languages: Spanish, Japanese, Russian, Chinese, Korean, Portuguese.

Web Applications
Express is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.
APIs
With a myriad of HTTP utility methods and middleware at your disposal, creating a robust API is quick and easy.
Performance
Express provides a thin layer of fundamental web application features, without obscuring Node features that you know and love.